---
interface Props {
  locale?: 'pl' | 'en'
}

const { locale = 'pl' }: Props = Astro.props as Props
---

<div id="funding-popup" class="fixed inset-0 z-50 hidden items-center justify-center bg-black/50 backdrop-blur-sm">
  <div class="mx-4 max-w-md overflow-hidden rounded-2xl bg-white shadow-2xl">
    <div class="relative bg-gradient-to-r from-emerald-600 to-teal-500 px-6 py-8 text-white">
      <button id="close-funding-popup" class="absolute right-4 top-4 rounded-full p-1 hover:bg-white/20 transition-colors" aria-label="Close popup">
        <svg class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M18 6L6 18"/><path d="M6 6l12 12"/>
        </svg>
      </button>

      <div class="flex items-center gap-3">
        <div class="rounded-full bg-white/20 p-3">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 1v22"/><path d="M17 5H9a4 4 0 0 0 0 8h6a4 4 0 0 1 0 8H6"/>
          </svg>
        </div>
        <div>
          <h3 class="text-xl font-bold">{locale === 'pl' ? 'Zgłoszenie do dofinansowania' : 'Funding interest'}</h3>
          <p class="text-white/90 text-sm">{locale === 'pl' ? 'Zostaw e‑mail, skontaktujemy się ze szczegółami dofinansowania (do 70%).' : 'Leave your email and we’ll follow up with funding details (up to 70%).'}</p>
        </div>
      </div>
    </div>

    <div class="px-6 py-6">
      <form id="funding-form" class="space-y-4">
        <input type="hidden" name="company" value="">
        <div>
          <label for="funding-email" class="block text-sm font-medium text-zinc-700 mb-2">{locale === 'pl' ? 'Twój adres email' : 'Your email'}</label>
          <input id="funding-email" name="email" type="email" required placeholder={locale === 'pl' ? 'Twój adres email' : 'Your email'} class="w-full rounded-lg border border-zinc-300 bg-white px-4 py-3 text-zinc-900 placeholder-zinc-400 shadow-sm focus:border-emerald-400/60 focus:outline-none focus:ring-2 focus:ring-emerald-300/40">
        </div>

        <button type="submit" class="w-full rounded-lg bg-emerald-600 px-6 py-3 text-white font-semibold shadow-sm hover:bg-emerald-500 focus:outline-none focus:ring-2 focus:ring-emerald-300/40 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
          <span class="submit-text">{locale === 'pl' ? 'Zgłoś się' : 'Submit'}</span>
          <span class="loading-text hidden">{locale === 'pl' ? 'Wysyłanie...' : 'Sending...'}</span>
        </button>

        <p class="text-xs text-zinc-500 leading-relaxed mt-3">
          Zapisując się do społeczności engineering-room.pl zgadzasz się na przetwarzanie Twoich danych osobowych w celu wysyłania na wskazany przez Ciebie adres e-mail informacji handlowych o nowościach, promocjach, produktach i usługach związanych z serwisem engineering-room.pl. Będzie to marketing bezpośredni, do realizacji którego wykorzystamy Twoje telekomunikacyjne urządzenia końcowe. Administratorem Twoich danych osobowych będzie DEVCODI spółka z ograniczoną odpowiedzialnością z siedzibą w Rzeszowie na ul. Adama Matuszczaka 14, 35-083 Rzeszów NIP: 8133859866. Przysługuje Tobie prawo do cofnięcia zgody, żądania wglądu do Twoich danych, wniesienia sprzeciwu co do ich przetwarzania, sprostowania, usunięcia i ograniczenia przetwarzania. Więcej informacji o tym jak przetwarzamy Twoje dane znajdziesz na 
          <a href="https://engineering-room.pl/rodo" class="text-accent hover:underline" target="_blank">engineering-room.pl/rodo</a>
        </p>
      </form>
    </div>
  </div>
</div>

<script>
  function initFundingPopup() {
    const popup = document.getElementById('funding-popup');
    const closeBtn = document.getElementById('close-funding-popup');
    const form = document.getElementById('funding-form');
    const submitBtn = form?.querySelector('button[type="submit"]');
    const submitText = submitBtn?.querySelector('.submit-text');
    const loadingText = submitBtn?.querySelector('.loading-text');

    function openPopup() {
      popup?.classList.remove('hidden');
      popup?.classList.add('flex');
      document.body.style.overflow = 'hidden';
    }

    function closePopup() {
      popup?.classList.add('hidden');
      popup?.classList.remove('flex');
      document.body.style.overflow = '';
    }

    closeBtn?.addEventListener('click', closePopup);
    popup?.addEventListener('click', (e) => { if (e.target === popup) closePopup(); });
    document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && !popup?.classList.contains('hidden')) closePopup(); });

    // Lightweight attribute-based trigger
    document.addEventListener('click', (e) => {
      const target = e.target;
      // @ts-ignore
      const trigger = target?.closest && target.closest('[data-open-funding]');
      if (trigger) { e.preventDefault(); openPopup(); }
    });

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      if (!submitBtn || !submitText || !loadingText) return;
      submitBtn.disabled = true;
      submitText.classList.add('hidden');
      loadingText.classList.remove('hidden');
      try {
        const formData = new FormData(form);
        const response = await fetch('/api/funding-subscribe', { method: 'POST', body: formData });
        if (response.ok) {
          form.innerHTML = `
            <div class="text-center py-4">
              <div class="rounded-full bg-green-100 p-3 w-16 h-16 mx-auto mb-4 flex items-center justify-center">
                <svg class="h-8 w-8 text-green-600" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d=\"M20 6L9 17l-5-5\"/>
                </svg>
              </div>
              <h4 class="text-lg font-semibold text-zinc-900 mb-2">Zgłoszenie wysłane!</h4>
              <p class="text-sm text-zinc-600">Wkrótce skontaktujemy się w sprawie dofinansowania.</p>
            </div>`;
          setTimeout(closePopup, 2200);
        } else {
          throw new Error('Submission failed');
        }
      } catch (error) {
        console.error('Funding subscription error:', error);
        alert('Coś poszło nie tak. Spróbuj ponownie.');
        submitBtn.disabled = false;
        submitText.classList.remove('hidden');
        loadingText.classList.add('hidden');
      }
    });

    // Expose globally for manual triggers
    // @ts-ignore
    window.openFundingPopup = openPopup;
  }

  initFundingPopup();
  document.addEventListener('astro:after-swap', initFundingPopup);
</script>
